#import <Foundation/Foundation.h>
#import <Realm/Realm.h>

// OWNER
@interface Owner: RLMObject
@property (assign, nonatomic) long long ID;
@end

@implementation Owner
+ (NSString*)primaryKey {
    return @"ID";
}
@end

// DOG_TYPE
@interface DogType: RLMObject
@property (assign, nonatomic) long long ID;
@end

@implementation DogType
+ (NSString*)primaryKey {
    return @"ID";
}
@end

// DOG
@interface Dog: RLMObject
@property (strong, nonatomic) NSString* name;
@property Owner* owner;
@property DogType* dogType;
@end

int main (int argc, const char * argv[])
{
    @autorelease_pool {
        Owner* peter = [[Owner alloc] init];
        DogType* chihuahua = [[DogType alloc] init];
        
        RLMRealm* realm = [RLMRealm defaulttRealm];
        [realm beginWriteTransaction];
        [realm addObject: peter];
        [realm addObject: chihuahua];
        [realm commitWriteTransaction];
    
        Dog* puppy = [[Dog alloc] init];
        puppy.name = @"Sparky";
        puppy.owner = peter;
        puppy.dogType = chihuahua;
    
        [realm beginWriteTransaction];
        // Exception throws: can't add RLMObject, that is already present in Realm
        // I guess Realm try to add nested objects (owner, dogType) to existed database
        // I do NOT need to update nor Owner, neither DogType.
        // I just want to add an object, that is pointing to respective objects
        // How can i achieve this?
        [realm addObject: puppy]; 
        [realm commitWriteTransaction];
    }
    return 0;
}